git --version // ser på hvilken version af git man har instaleret 

////////////////////////////////////////
////
////	Instalere git på Mac Eller linux 
////
////	sudo apt-get install git	
////
////
////////////////////////////////////////

git init // Opretter reposertory inde i filmappen som man er inde i (fordi man ikke har defineret andet)

git init (projektnavn) // Opretter mappe med reposertory

ls // Laver liste over filer der er i mappen

cd // vælger du filmappe 

ls -a // der kan du se liste plus skjulte filer

mkdir // laver en mappe

cd ~ går tilbage til roden

cd.. går en mappe tilbage

touch // gør at du kan oprette filer 

clear // ryder skærmen 

mv (Gammel navn) (Ny navn) // Ændre navn på mappe (skal være ude af mappen for at ændre)

rm -r mappe/.git // sletter mappn (unsøg hvad -r gør)

rm -r test/ sletter fil (unsøg hvad -r gør)

git rm test/ sletter fil

////////////////////////////////////////
////
////	Special Infomation 
////
////	Initlialized empty reposertory
////	
////	///////////////////////////////
////	////			///////
//// 	//// Har oprettet en 	///////
////	////	reposertory	///////		
////	//// uden  gemte filler ///////
////	////			///////
///////////////////////////////////////

///////////////////////////////////////
Configurer

git config --global core.editor "notepad"


Dette gør at man åbner filen i notepad 
//////////////////////////////////////

git config --global user.name "Yor Name" // Skal oprette navn

git config --global email "Yor Email"   // skal oprette email


/////////////////////////////////////

Step:
1:
git add // tilføjer filen til din reposertory ( staging area )
2:
git commit // Gemmer filen i reposertory

/////////////////////////////////////

git reset HEAD (filnavn) // fjerner fil fra stage og sætter den tilbage til untracked

git commit -a // commiter alle filer der kan findes i staging 

git commit -a -m " gemme besked" // commiter alle filer der kan findes med en besked

git commit // comitter og giver mulighed for besked direkte i editor 


git status // hviser den nuværende versions kontrol af vores projekt 


////////////////////////////////////////
////
////	Looking back 
////
////		
////
////
////////////////////////////////////////


git log // ser en liste over hvad der er commitet 
ctrl + c // går ud af view-mode og tilbage til cammand line  


git checkout (2jkn3 commit code) // Udskifter branch 

cat // læser filen i command prompt og udskriver den direkte 


git checkout master // går tilbage til roden 

git diff 2jkn3 34kmf // hviser hvad forskelen er på to filer   


////////////////////////////////////////
////
////	Braching
////
////	 er en anden version af vores kode 
////
////	Et sidekørnde projekt fra hovedeprojektet (master)
////
////////////////////////////////////////


git branch // laver en ny branch 

git checkout (branchnavn) // skifter branch

git checkout -b (branchnavn) // opretter en branch samtidig med at man går ind i den branch 

git branchtouch // indekere hvilken branch du er i samtidig med at du får en liste af branch

git branch -D // Sletter branch

git merge (branch) // overskriver pågælende branch med ny branch













